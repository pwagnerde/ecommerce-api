swagger: "2.0"
info:
  version: "0.0.1"
  title: E-Commerce REST API
# during dev, should point to your local machine
host: localhost:10010
# basePath prefixes all resource paths 
basePath: /
# 
schemes:
  # tip: remove http to make production-grade
  - http
  - https
# format of bodies a client can send (Content-Type)
consumes:
  - application/json
# format of the responses to the client (Accepts)
produces:
  - application/json
paths:
  /hello:
    # binds a127 app logic to a route
    x-swagger-router-controller: hello_world
    get:
      tags:
      - "Demo"
      description: Returns 'Hello' to the caller
      # used as the method name of the controller
      operationId: hello
      parameters:
        - name: name
          in: query
          description: The name of the person to whom to say hello
          required: false
          type: string
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/HelloWorldResponse"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /users:
    # our controller name
    x-swagger-router-controller: users
    get:
      tags:
      - "User"
      operationId: getUsersAll
      description: Get the full users list
      # define the type of response for Success "200" and Error
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/GetUsersListResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /users/{userId}:
    # our controller name
    x-swagger-router-controller: users
    get:
      tags:
      - "User"
      operationId: getUser
      description: Get a single user
      # define the type of response for Success "200" and Error
      parameters:
        - name: userId
          type: integer
          in: path
          required: true
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/GetUserResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    put:
      tags:
      - "User"
      operationId: updateUser
      description: Update a single user
      # define the type of response for Success "200" and Error
      parameters:
        - name: userId
          type: integer
          in: path
          required: true
        - name: body
          in: body
          required: true
          schema:
            $ref: "#/definitions/GetUserResponse"
      responses:
        "201":
          description: Success
          schema:
            $ref: "#/definitions/SuccessResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /register:
    # our controller name
    x-swagger-router-controller: users
    post:
      tags:
      - "User"
      operationId: createUser
      description: Update a single user
      # define the type of response for Success "200" and Error
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: "#/definitions/NewUserRequest"
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/GetUserResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /products:
    # our controller name
    x-swagger-router-controller: products
    get:
      tags:
      - "Product"
      operationId: getProductsAll
      description: Get the full products list
      # define the type of response for Success "200" and Error
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/GetProductsListResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /products/{category_id}:
    # our controller name
    x-swagger-router-controller: products
    get:
      tags:
      - "Product"
      operationId: getProductsCategory
      description: Get the products list for a specific product category
      # define the type of response for Success "200" and Error
      parameters:
        - name: category_id
          type: string
          in: path
          required: true
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/GetProductsListResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /products/item/{productId}:
    # our controller name
    x-swagger-router-controller: products
    get:
      tags:
      - "Product"
      operationId: getProduct
      description: Get a single product
      # define the type of response for Success "200" and Error
      parameters:
        - name: productId
          type: integer
          in: path
          required: true
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/GetProductResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /orders:
    # our controller name
    x-swagger-router-controller: orders
    get:
      tags:
      - "Order"
      operationId: getOrdersAll
      description: Get the full order list
      # define the type of response for Success "200" and Error
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/GetOrderListResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /orders/{customer_id}:
    # our controller name
    x-swagger-router-controller: orders
    get:
      tags:
      - "Order"
      operationId: getOrdersCustomer
      description: Get the order list for a specific customer
      # define the type of response for Success "200" and Error
      parameters:
        - name: customer_id
          type: integer
          in: path
          required: true
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/GetOrderListResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /orders/{order_id}/items:
    # our controller name
    x-swagger-router-controller: orders
    get:
      tags:
      - "Order"
      operationId: getOrderItems
      description: Get a single order with all order items
      # define the type of response for Success "200" and Error
      parameters:
        - name: order_id
          type: integer
          in: path
          required: true
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/GetItemsResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /carts:
    # our controller name
    x-swagger-router-controller: carts
    get:
      tags:
      - "Shopping Cart"
      operationId: getCartsAll
      description: Get the full shopping carts list
      # define the type of response for Success "200" and Error
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/GetCartListResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /carts/{customer_id}:
    # our controller name
    x-swagger-router-controller: carts
    get:
      tags:
      - "Shopping Cart"
      operationId: getCartsCustomer
      description: Get the shopping cart list for a specific customer
      # define the type of response for Success "200" and Error
      parameters:
        - name: customer_id
          type: integer
          in: path
          required: true
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/GetCartListResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /carts/{cart_id}/items:
    # our controller name
    x-swagger-router-controller: carts
    get:
      tags:
      - "Shopping Cart"
      operationId: getCartItems
      description: Get a single shopping cart with all items
      # define the type of response for Success "200" and Error
      parameters:
        - name: cart_id
          type: integer
          in: path
          required: true
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/GetItemsResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    put:
      tags:
      - "Shopping Cart"
      operationId: addCartItems
      description: Add new product or update quantity of existing product
      # define the type of response for Success "200" and Error
      parameters:
        - name: cart_id
          type: integer
          in: path
          required: true
        - name: body
          in: body
          required: true
          schema:
            $ref: "#/definitions/ItemRequest"
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/SuccessResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    delete:
      tags:
      - "Shopping Cart"
      operationId: removeCartItems
      description: Remove all shopping cart items
      # define the type of response for Success "200" and Error
      parameters:
        - name: cart_id
          type: integer
          in: path
          required: true
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/GetItemsResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /carts/{cart_id}/checkout:
    # our controller name
    x-swagger-router-controller: carts
    get:
      tags:
      - "Shopping Cart"
      operationId: orderCartItems
      description: Checkout an existing shopping cart
      # define the type of response for Success "200" and Error
      parameters:
        - name: cart_id
          type: integer
          in: path
          required: true
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/SuccessResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /swagger:
    x-swagger-pipe: swagger_raw
# complex objects have schema definitions
definitions:
  HelloWorldResponse:
    required:
      - message
    properties:
      message:
        type: string
  GetUsersListResponse:
    required:
      - users
    properties:
      # The array of users
      users:
        type: array
        items: 
          type: object
          properties:
            id:
              type: integer
              minimum: 1
            first_name:
              type: string
              maxLength: 100
            middle_name:
              type: string
              maxLength: 50
            last_name:
              type: string
              maxLength: 150
            email_address:
              type: string
              maxLength: 200
            password_hash:
              type: string
              maxLength: 256
            locked_out:
              type: boolean
            created_at:
              type: string
              format: date-time
          required:
            - id
            - first_name
            - last_name
            - email_address
            - password_hash
            - locked_out
            - created_at
  GetUserResponse:
    required:
      - user
    properties:
      # The single user object
      user:
        type: object
        properties:
          id:
            type: integer
            minimum: 1
          first_name:
            type: string
            maxLength: 100
          middle_name:
            type: string
            maxLength: 50
          last_name:
            type: string
            maxLength: 150
          email_address:
            type: string
            maxLength: 200
        required:
           - id
           - first_name
           - last_name
           - email_address
  NewUserRequest:
    required:
      - user
    properties:
      # The single user object
      user:
        type: object
        properties:
          first_name:
            type: string
            maxLength: 100
          middle_name:
            type: string
            maxLength: 50
          last_name:
            type: string
            maxLength: 150
          email_address:
            type: string
            maxLength: 200
          password:
            type: string
            maxLength: 256
        required:
           - first_name
           - last_name
           - email_address
           - password
  GetProductsListResponse:
    required:
      - products
    properties:
      # The array of products
      products:
        type: array
        items: 
          type: object
          properties:
            id:
              type: integer
              minimum: 1
            name:
              type: string
              maxLength: 100
            description:
              type: string
              maxLength: 500
            category_id:
              type: integer
            vendor_id:
              type: integer
            sku:
              type: string
              maxLength: 50
            price:
              type: number
              minimum: 0
          required:
            - id
            - name
            - description
            - category_id
            - vendor_id
            - sku
            - price
  GetProductResponse:
    required:
      - product
    properties:
      # The single product object
      product:
        type: object
        properties:
          id:
            type: integer
            minimum: 1
          name:
            type: string
            maxLength: 100
          description:
            type: string
            maxLength: 500
          category_id:
            type: integer
          vendor_id:
            type: integer
          sku:
            type: string
            maxLength: 50
          price:
            type: number
            minimum: 0
        required:
           - id
           - name
           - description
           - category_id
           - vendor_id
           - sku
           - price
  GetOrderListResponse:
    required:
      - orders
    properties:
      # The array of orders
      orders:
        type: array
        items: 
          type: object
          properties:
            order_id:
              type: integer
              minimum: 1
            customer_id:
              type: integer
            status_code_id:
              type: integer
              minimum: 1
            customer_comments:
              type: string
              maxLength: 300
            created_at:
              type: string
              format: date-time
          required:
            - order_id
            - customer_id
            - status_code_id
            - created_at
  GetItemsResponse:
    required:
      - order
    properties:
      # The array of order items
      order:
        type: array
        items: 
          type: object
          properties:
            item_id:
              type: integer
              minimum: 1
            product_id:
              type: integer
              minimum: 1
            product_name:
              type: string
              maxLength: 100
            price:
              type: number
              minimum: 0
            quantity:
              type: number
              minimum: 0
          required:
            - item_id
            - product_id
            - product_name
            - price
            - quantity
  ItemRequest:
    required:
      - shopping_cart_item
    properties:
      # The array of order items
      shopping_cart_item:
        type: object
        properties:
          card_id:
            type: integer
            minimum: 1
          product_id:
            type: integer
            minimum: 1
          price:
            type: number
            minimum: 0
          quantity:
            type: number
            minimum: 0
        required:
          - card_id
          - product_id
          - price
          - quantity
  GetCartListResponse:
    required:
      - carts
    properties:
      # The array of orders
      carts:
        type: array
        items: 
          type: object
          properties:
            cart_id:
              type: integer
              minimum: 1
            customer_id:
              type: integer
            status_code_id:
              type: integer
              minimum: 1
            created_at:
              type: string
              format: date-time
          required:
            - cart_id
            - customer_id
            - status_code_id
            - created_at
  SuccessResponse:
    required:
      - message
    properties:
      message:
        type: string
  ErrorResponse:
    required:
      - message
    properties:
      message:
        type: string
